# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# Map static resources from the /public folder to the /assets URL path
GET /assets/*file controllers.Assets.at(path="/public", file)


#index
GET /blog  controllers.Usuario.index()

GET		/blog/index2	controllers.Usuario.index2()

#play test blog


#listar usuario
GET /blog/usuario/list controllers.Usuario.listar()

#insertar usuarios
POST /blog/usuario/insertar controllers.Usuario.insertar()

#eliminar Usuario
DELETE	/blog/usuario/eliminar/:nick controllers.Usuario.eliminarUsuario(nick)

#modificar Usuario
PUT	/blog/usuario/modificar/:token 	controllers.Usuario.modificarUsuario(token)
 
#validar Usuario
POST /blog/usuario/validar controllers.Usuario.validarUsuario()
 
# un Usuario jajajajaa
GET	/blog/usuario/unico/:nick controllers.Usuario.especifico(nick)

#dado un id devolver su nick
GET	/blog/usuario/datos/:id		controllers.Usuario.devolverNick(id)



#insertar Comentario
POST /blog/comentario/insertar/:token  controllers.Comentario.insertarComentario(token)

#listar todos Comentarios
GET /blog/comentario/listart  controllers.Comentario.listart()     

#listar Comentarios especificos
GET /blog/comentario/listar/:id_c  controllers.Comentario.listarcomentarios(id_c)          

#hace like comentario
POST /blog/comentario/like/:token controllers.Comentario.darLike(token)          

#eliminar comentario (String token, String id_c, String nick)
DELETE /blog/comentario/eliminar/:nick/:id_c/:token controllers.Comentario.eliminarComentarios(token,id_c,nick)

#eliminar comentario por xml 
POST /blog/comentario/eliminar/:token controllers.Comentario.eliminarComentariosXML(token)

#listar Comentario por Usuario
GET /blog/comentario/listaru/:nick  controllers.Comentario.listarcomentariosUsuario(nick) 

#Insertar a Comentario Tag
#POST /blog/comentario/tag/:token controllers.Comentario.insertarComentariotag(token) 

#Listar Comentarios por Tags
GET  /blog/comentario/listar/tag/:tags     controllers.Comentario.listartags(tags) 

#Insertar Comentario con Adjunto
POST	/blog/comentario/insertarAdjunto	controllers.Comentario.upload()

#Listar tags de un comentario
GET		/blog/comentario/tags/:id_c			controllers.Comentario.tagDeUnComentario(id_c)

#Listar todos los tags registrados en el sistema
GET		/blog/tags/listar					controllers.Comentario.listarTags()

#insertar comentario tag
POST	/blog/comentario/tag/:token			controllers.Comentario.insertarComentariotag(token) 

#insertar foto a usuario
POST 	/blog/usuario/foto/:token			controllers.Usuario.nuevaInsercionFoto(token)

#insertar comentario con adjunto
POST 	/blog/comentario/insertarAdjunto/:token		controllers.Comentario.insercionAdjunto(token)

#obtener foto de un usuario
GET		/blog/usuario/obtenerFoto/:nick		controllers.Usuario.obtenerFoto(nick)

#obtener adjunto de un comentario
GET 	/blog/comentario/obtenerAdjunto/:id_c	controllers.Comentario.obtenerAdjunto(id_c)
